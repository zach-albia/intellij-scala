### org/jetbrains/plugins/scala/codeInsight/intention/expression/ConvertParameterToUnderscoreIntention.scala
introduce.implicit.incorrect.order=It is not allowed to introduce implicit parameters because of incorrect order of parameters
introduce.implicit.incorrect.count=It is not allowed to introduce implicit parameter because of incorrect usage count of parameter
introduce.implicit.not.allowed.here=It is not allowed to introduce implicit parameter in this expression

### org/jetbrains/plugins/scala/codeInsight/intention/expression/OptionWithLiteralToSomeIntention.scala
replace.with.some=Replace with Some
replace.option.with.some=Replace Option with Some

### org/jetbrains/plugins/scala/codeInsight/intention/expression/RemoveApplyIntention.scala
remove.apply.implicit.parameter=It is not allowed to remove ''apply'' because method ''{0}'' has implicit parameter
remove.apply.constructor.implicit.parameter=It is not allowed to remove ''apply'' because constructor of ''{0}'' has implicit parameter
remove.apply.overloaded=It is not allowed to remove ''apply'' because method ''{0}'' is overloaded

### org/jetbrains/plugins/scala/codeInspection/SAM/ConvertExpressionToSAMInspection.scala
convert.expression.to.sam=Convert expression to Single Abstract Method

### org/jetbrains/plugins/scala/codeInspection/ScalaFileNameInspection.scala
fileName.rename.text={0} {1} to {2}
fileName.rename.class=Rename Type Definition
fileName.rename.file=Rename File

### org/jetbrains/plugins/scala/codeInspection/catchAll/DangerousCatchAllInspection.scala
catch.all=Specify type of exception

### org/jetbrains/plugins/scala/codeInspection/collections/CollectHeadOptionInspection.scala
replace.collect.headOption.with.collectFirst=Replace .collect and .headOption with .collectFirst

### org/jetbrains/plugins/scala/codeInspection/collections/ComparingLengthInspection.scala
replace.with.lengthCompare=Replace with .lengthCompare

### org/jetbrains/plugins/scala/codeInspection/collections/CorrespondsUnsortedInspection.scala
sameElements.unsorted=`sameElements` on (or with) unsorted collection, result is unpredictable
corresponds.unsorted=`corresponds` with unsorted collection, result is unpredictable

### org/jetbrains/plugins/scala/codeInspection/collections/DropTakeToSliceInspection.scala
replace.drop.take.with.slice=Replace .drop and .take with .slice
replace.take.drop.with.slice=Replace .take and .drop with .slice

### org/jetbrains/plugins/scala/codeInspection/collections/EmptyCheckInspection.scala
replace.with.isEmpty=Replace with .isEmpty
replace.with.isDefined=Replace with .isDefined
replace.with.nonEmpty=Replace with .nonEmpty

### org/jetbrains/plugins/scala/codeInspection/collections/EmulateFlattenInspection.scala
replace.with.flatten=Replace with .flatten

### org/jetbrains/plugins/scala/codeInspection/collections/EqualityToSameElementsInspection.scala
replace.equals.with.sameElements=Replace equals with sameElements

### org/jetbrains/plugins/scala/codeInspection/collections/ExistsEqualsInspection.scala
exists.equals.hint=Replace exists with contains
forall.notEquals.hint=Replace forall with not contains

### org/jetbrains/plugins/scala/codeInspection/collections/ExistsForallReplaceInspection.scala
replace.with.forall=Replace with .forall
replace.with.exists=Replace with .exists

### org/jetbrains/plugins/scala/codeInspection/collections/FilterEmptyCheckInspection.scala
filter.nonempty.check.hint=Replace filter and non-emptiness check with exists
filter.empty.check.hint=Replace filter and emptiness check with !(...).exists
filterNot.empty.check.hint=Replace filterNot and emptiness check with forall
filterNot.nonempty.check.hint=Replace filterNot and non-emptiness check with !(...).forall

### org/jetbrains/plugins/scala/codeInspection/collections/FilterHeadOptionInspection.scala
filter.headOption.hint=Replace filter and headOption with find

### org/jetbrains/plugins/scala/codeInspection/collections/FilterOtherContainsInspection.scala
replace.filter.with.intersect=Replace filter and contains with intersect
replace.filter.with.diff=Replace filter and not contains with diff

### org/jetbrains/plugins/scala/codeInspection/collections/FilterSetContainsInspection.scala
remove.redundant.contains=Remove redundant .contains

### org/jetbrains/plugins/scala/codeInspection/collections/FilterSizeInspection.scala
filter.size.hint=Replace filter and size with count

### org/jetbrains/plugins/scala/codeInspection/collections/FindEmptyCheckInspection.scala
find.isDefined.hint=Replace find and non-emptiness check with exists
find.isEmpty.hint=Replace find and emptiness check with !(...).exists

### org/jetbrains/plugins/scala/codeInspection/collections/FoldTrueAndInspection.scala
fold.true.and.hint=Replace fold with forall

### org/jetbrains/plugins/scala/codeInspection/collections/GetGetOrElseInspection.scala
get.getOrElse.hint=Replace with getOrElse(key, defaultValue)

### org/jetbrains/plugins/scala/codeInspection/collections/GetOrElseNullInspection.scala
getOrElse.null.hint=Replace getOrElse(null) with orNull

### org/jetbrains/plugins/scala/codeInspection/collections/HeadOrLastOptionInspection.scala
replace.with.headOption=Replace with .headOption
replace.with.lastOption=Replace with .lastOption
ifstmt.to.headOption=If-else to headOption
ifstmt.to.lastOption=If-else to lastOption
lift.to.headOption=.lift to headOption
lift.to.lastOption=.lift to lastOption

### org/jetbrains/plugins/scala/codeInspection/collections/IfElseToFilteredOptionInspection.scala
ifstmt.to.filteredOption=Replace if with filtered option

### org/jetbrains/plugins/scala/codeInspection/collections/IndexBoundsCheckInspection.scala
ifstmt.to.lift=If-else to lift

### org/jetbrains/plugins/scala/codeInspection/collections/LastIndexToLastInspection.scala
replace.with.last=Replace with .last

### org/jetbrains/plugins/scala/codeInspection/collections/MapFlattenInspection.scala
replace.map.flatten.with.flatMap=Replace .map and .flatten with .flatMap

### org/jetbrains/plugins/scala/codeInspection/collections/MapGetEmptinessCheckInspection.scala
replace.get.nonEmpty.with.contains=Replace with .contains(key)
replace.get.isEmpty.with.not.contains=Replace with !.contains(key)

### org/jetbrains/plugins/scala/codeInspection/collections/MapGetGetInspection.scala
get.get.hint=Replace with .(key)

### org/jetbrains/plugins/scala/codeInspection/collections/MapGetOrElseBooleanInspection.scala
map.getOrElse.false.hint=Replace map and getOrElse(false) with exists
map.getOrElse.true.hint=Replace map and getOrElse(true) with forall

### org/jetbrains/plugins/scala/codeInspection/collections/MapGetOrElseInspection.scala
map.getOrElse.hint=Replace map and getOrElse with fold

### org/jetbrains/plugins/scala/codeInspection/collections/MapKeysInspection.scala
replace.with.keys=Replace with .keys
replace.with.keySet=Replace with .keySet
replace.with.keysIterator=Replace with .keysIterator

### org/jetbrains/plugins/scala/codeInspection/collections/MapLiftInspection.scala
replace.with.get=Replace with .get

### org/jetbrains/plugins/scala/codeInspection/collections/MapToBooleanContainsInspection.scala
replace.map.contains.true.with.exists=Replace .map(...).contains(true) with .exists(...)
replace.map.contains.false.with.not.forall=Replace .map(...).contains(false) with ! .forall(...)

### org/jetbrains/plugins/scala/codeInspection/collections/MapValuesInspection.scala
replace.with.values=Replace with .values
replace.with.valuesIterator=Replace with .valuesIterator

### org/jetbrains/plugins/scala/codeInspection/collections/OperationOnCollectionInspectionBase.scala
operation.on.collection.id=OperationsOnCollection
operation.on.collection.name=Simplifiable operation on collection
operation.on.collection.like.option.input.message=Inspection would treat these classes like scala.Option
operation.on.collection.like.option.input.title=Add like-option classes
operation.on.collection.like.option.panel.title=Like-option classes
operation.on.collection.like.collection.input.message=Inspection would treat these classes like collections
operation.on.collection.like.collection.input.title=Add like-collection classes
operation.on.collection.like.collection.panel.title=Like-collection classes

### org/jetbrains/plugins/scala/codeInspection/collections/OptionEqualsSomeToContainsInspection.scala
replace.with.contains=Replace with .contains
replace.with.not.contains=Replace with !.contains

### org/jetbrains/plugins/scala/codeInspection/collections/RedundantCollectionConversionInspection.scala
redundant.collection.conversion=Remove redundant collection conversion

### org/jetbrains/plugins/scala/codeInspection/collections/RedundantHeadOrLastOptionInspection.scala
remove.redundant.headOption=Remove redundant .headOption
remove.redundant.lastOption=Remove redundant .lastOption

### org/jetbrains/plugins/scala/codeInspection/collections/ReplaceToWithUntilInspection.scala
replace.to.with.until=replace `to` with `until`

### org/jetbrains/plugins/scala/codeInspection/collections/ReverseIteratorInspection.scala
replace.reverse.iterator=Replace .reverse.iterator with .reverseIterator

### org/jetbrains/plugins/scala/codeInspection/collections/ReverseMapInspection.scala
replace.reverse.map=Replace .reverse.map with .reverseMap

### org/jetbrains/plugins/scala/codeInspection/collections/ReverseTakeReverseInspection.scala
replace.reverse.take.reverse.with.takeRight=Replace .reverse.take(...).reverse with .takeRight(...)

### org/jetbrains/plugins/scala/codeInspection/collections/SameElementsToEqualsInspection.scala
replace.sameElements.with.equals=Replace sameElements with equals
replace.corresponds.with.equals=Replace corresponds with equals

### org/jetbrains/plugins/scala/codeInspection/collections/SideEffectsInMonadicTransformationInspection.scala
side.effects.in.monadic=Side effects in a monadic transformation

### org/jetbrains/plugins/scala/codeInspection/collections/SimplifiableFoldOrReduceInspection.scala
fold.sum.hint=Replace fold with sum
fold.product.hint=Replace fold with product
fold.sum.short=fold to sum
fold.product.short=fold to product
reduce.sum.hint=Replace reduce with sum
reduce.product.hint=Replace reduce with product
reduce.min.hint=Replace reduce with min
reduce.max.hint=Replace reduce with max
reduce.sum.short=reduce to sum
reduce.product.short=reduce to product
reduce.min.short=reduce to min
reduce.max.short=reduce to max

### org/jetbrains/plugins/scala/codeInspection/collections/SizeToLengthInspection.scala
size.to.length=Replace .size with .length on arrays and strings

### org/jetbrains/plugins/scala/codeInspection/collections/SomeToOptionInspection.scala
replace.with.option=Replace with Option

### org/jetbrains/plugins/scala/codeInspection/collections/SortFilterInspection.scala
sort.filter.hint=Change order of sort and filter

### org/jetbrains/plugins/scala/codeInspection/collections/SortedMaxMinInspection.scala
replace.sorted.head.with.min=Replace with .min
replace.sorted.last.with.max=Replace with .max
replace.sortBy.head.with.minBy=Replace with .minBy
replace.sortBy.last.with.maxBy=Replace with .maxBy

### org/jetbrains/plugins/scala/codeInspection/collections/ToSetAndBackInspection.scala
replace.toSet.and.back.with.distinct=Replace conversion to Set and back with .distinct

### org/jetbrains/plugins/scala/codeInspection/collections/UnitInMapInspection.scala
expression.unit.return.in.map=Expression with unit return type in the argument of map
use.foreach.instead.of.map=Use foreach instead of map

### org/jetbrains/plugins/scala/codeInspection/collections/UnzipSingleElementInspection.scala
replace.with.map=Replace with .map

### org/jetbrains/plugins/scala/codeInspection/collections/ZeroIndexToHeadInspection.scala
replace.with.head=Replace with .head

### org/jetbrains/plugins/scala/codeInspection/collections/ZipWithIndex.scala
replace.with.zipWithIndex=Replace with zipWithIndex

### org/jetbrains/plugins/scala/codeInspection/controlFlow/ScalaUnusedExpressionInspection.scala
unused.expression.throws=Unused expression, the only possible side effect is an exception
unused.expression.no.side.effects=Unused expression without side effects

### org/jetbrains/plugins/scala/codeInspection/functionExpressions/UnnecessaryPartialFunctionInspection.scala
unnecessary.partial.function=Unnecessary partial function

### org/jetbrains/plugins/scala/codeInspection/functionExpressions/UnnecessaryPartialFunctionQuickFix.scala
convert.to.anonymous.function=Convert to anonymous function

### org/jetbrains/plugins/scala/codeInspection/imports/SingleImportInspection.scala
single.import=Remove braces from import statement containing only one import

### org/jetbrains/plugins/scala/codeInspection/internal/ScalaShouldBeTextContainsInspection.scala
internal.replace.with.textContains=Replace with .textContains

### org/jetbrains/plugins/scala/codeInspection/internal/ScalaShouldBeTextMatchesInspection.scala
internal.replace.with.textMatches=Replace with .textMatches

### org/jetbrains/plugins/scala/codeInspection/methodSignature/ApparentResultTypeRefinementInspection.scala
insert.missing.assignment=Insert missing assignment

### org/jetbrains/plugins/scala/codeInspection/methodSignature/JavaAccessorEmptyParenCallInspection.scala
remove.call.parentheses=Remove call parentheses

### org/jetbrains/plugins/scala/codeInspection/methodSignature/OverrideAbstractMemberInspection.scala
add.override.modifier.quickfix=Add override modifier

### org/jetbrains/plugins/scala/codeInspection/methodSignature/ParameterlessAccessInspection.scala
add.call.parentheses=Add call parentheses

### org/jetbrains/plugins/scala/codeInspection/methodSignature/UnitMethodInspection.scala
convert.to.function.syntax=Convert to function syntax

### org/jetbrains/plugins/scala/codeInspection/methodSignature/quickfix/AddEmptyParentheses.scala
empty.parentheses=Add empty parentheses

### org/jetbrains/plugins/scala/codeInspection/methodSignature/quickfix/RemoveParentheses.scala
redundant.parentheses=Remove redundant parentheses

### org/jetbrains/plugins/scala/codeInspection/parameters/NameBooleanParametersInspection.java
name.boolean.ignore.single.parameter.methods=Ignore methods with a single parameter

### org/jetbrains/plugins/scala/codeInspection/parameters/NameBooleanParametersInspectionBase.scala
name.boolean.params=Name boolean parameters

### org/jetbrains/plugins/scala/codeInspection/parameters/TypedParameterWithoutParenthesisInspection.scala
surround.with.parenthesis=Surround with parenthesis

### org/jetbrains/plugins/scala/codeInspection/parentheses/ScalaUnnecessaryParenthesesInspection.java
clarifying.parentheses=Clarifying parentheses
around.function.type=Around function type
around.function.type.parameter=Around parameter of a function type
around.function.expr.parameter=Around parameter of a function expression

### org/jetbrains/plugins/scala/codeInspection/resourceLeaks/SourceNotClosedInspection.scala
source.not.closed=Source is not closed

### org/jetbrains/plugins/scala/codeInspection/shadow/VariablePatternShadowInspection.scala
suspicious.shadowing.by.a.variable.pattern=Suspicious shadowing by a Variable Pattern
rename.variable.pattern=Rename Variable Pattern
convert.to.stable.identifier.pattern=Convert to Stable Identifier Pattern `{0}`

### org/jetbrains/plugins/scala/codeInspection/specs2/BuiltinMatcherExistsInspection.scala
specs2.builtin.matcher.alternative.exists=Available matcher exists
specs2.use.builtin.matcher=Replace with builtin matcher

### org/jetbrains/plugins/scala/codeInspection/suppression/ScalaSuppressForStatementFix.scala
suppress.inspection.function=Suppress for function
suppress.inspection.typeAlias=Suppress for type alias
suppress.inspection.variable=Suppress for variable definiton

### org/jetbrains/plugins/scala/codeInspection/syntacticClarification/VariableNullInitializerInspection.scala
convert.null.initializer.to.underscore=Convert null initializer to _

### org/jetbrains/plugins/scala/codeInspection/syntacticSimplification/ConvertibleToMethodValueInspection.scala
convertible.to.method.value.name=Anonymous function convertible to a method value
convertible.to.method.value.anonymous.hint=Convert to a method value
convertible.to.method.value.eta.hint=Remove redundant placeholder

### org/jetbrains/plugins/scala/codeInspection/typeChecking/ComparingUnrelatedTypesInspection.scala
comparing.unrelated.types.name=Comparing unrelated types
comparing.unrelated.types.hint=Comparing unrelated types: {0} and {1}

### org/jetbrains/plugins/scala/codeInspection/typeChecking/PatternMayNeverMatchInspection.scala
pattern.may.never.match=Pattern may never match

### org/jetbrains/plugins/scala/codeInspection/typeLambdaSimplify/AppliedTypeLambdaCanBeSimplifiedInspection.scala
applied.type.lambda.can.be.simplified=Applied type lambda can be simplified
simplify.type=Simplify type

### org/jetbrains/plugins/scala/codeInspection/typeLambdaSimplify/KindProjectorSimplifyTypeProjectionInspection.scala
kind.projector.simplify.type=Kind Projector: Simplify type

### <unused>
fileName.does.not.match=Class doesn't correspond to file name
drop.one.hint=Replace drop(1) with tail
replace.equals.with.arrays.equals=Use java.util.Arrays.equals instead of array equality
method.signature.accessor.empty.parenthesis=Accessor-like named method is empty-paren
method.signature.accessor.unit.return.type=Accessor-like named method has Unit result type
method.signature.unit.explicit.type=Redundant Unit result type annotation
method.signature.unit.functional.definition=Method with Unit result type has functional definition
method.signature.unit.parameterless=Method with Unit result type is parameterless
method.signature.unit.explicit.assignment=Redundant assignment
method.signature.procedure.declaration=Procedure syntax in method declaration
method.signature.procedure.definition=Procedure syntax in method definition
method.signature.result.type.refinement=Apparent result type refinement; is an assignment missing?
method.signature.parameterless.override.empty.paren=Empty-paren Scala method overridden as parameterless
method.signature.parameterless.override.java.mutator=Java mutator method overridden as parameterless
method.signature.parameterless.override.mutator.like=Mutator-like named method with is parameterless
method.signature.override.abstract.member=Mark methods overriding abstract members with override keyword
method.signature.empty.paren.override.java.accessor=Java accessor method overridden as empty-paren
method.signature.empty.paren.override.parameterless=Parameterless Scala member overridden as empty-paren
method.signature.parameterless.access.java.mutator=Java mutator method accessed as parameterless
method.signature.parameterless.access.empty.paren=Empty-paren method accessed as parameterless
method.signature.java.accessor.empty.paren=Java accessor method called as empty-paren
typed.parameter.without.parenthesis.in.function.literal=Typed parameter without parenthesis in functional literal
suppress.inspection.argument=Suppress for argument
unused.expression.name=Unused expression
unreachable.code.name=Unreachable code
internal.getText.contains.shouldBe.textContains=.getText.contains should be .textContains
internal.getText.equals.shouldBe.textMatches=.getText.equals should be .textMatches
internal.string.should.be.in.bundle=String should be extracted to bundle
internal.only.pass.hardcoded.strings.as.property.keys=Only pass hardcoded strings as property keys
