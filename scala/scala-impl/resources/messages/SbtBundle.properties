### org/jetbrains/sbt/Sbt.scala
sbt.build.module.description=sbt modules are used to mark content roots and to provide libraries for sbt project definitions
sbt.project.long.description=Project backed by sbt
sbt.project.description=sbt project
sbt.build.module.name=sbt module

### org/jetbrains/sbt/annotator/SbtAnnotator.scala
sbt.annotation.blankLineRequired=Blank line is required to separate expressions in *.sbt files prior to version 0.13.7 (yours is {0})
sbt.annotation.sbtFileMustContainOnlyExpressions=sbt file must contain only expressions
sbt.annotation.expectedExpressionType=Expected expression type is Def.SettingsDefinition in sbt file
sbt.annotation.expectedExpressionTypeSbt0136=Expected expression type is DslEntry in sbt file
sbt.annotation.expressionMustConform=Expression type {0} must conform to Def.SettingsDefinition in sbt file
sbt.annotation.expressionMustConformSbt0136=Expression type {0} must conform to DslEntry in sbt file

### org/jetbrains/sbt/annotator/SbtDependencyAnnotator.scala
sbt.annotation.unresolvedDependency=Unknown artifact. Not resolved or indexed

### org/jetbrains/sbt/annotator/dependency/AddSbtDependencyFix.scala
sbt.add.sbt.dependency=Add sbt dependency...
sbt.searching.for.artifacts=Searching for artifacts...
sbt.finding.sbt.dependency.declarations=Finding sbt dependency declarations...
sbt.updating.dependency.index=Updating dependency index...
sbt.no.dependencies.found.for.given.import=No dependencies found for given import
sbt.no.places.to.add.a.dependency.found=No places to add a dependency found
sbt.add.sbt.dependencies=Add sbt dependencies

### org/jetbrains/sbt/annotator/dependency/ui/SbtArtifactChooseDependencyStep.scala
sbt.artifact.search=sbt artifact search

### org/jetbrains/sbt/annotator/dependency/ui/SbtPossiblePlacesPanel.scala
sbt.could.not.generate.dependency.string=// Could not generate dependency string, please report this issue

### org/jetbrains/sbt/annotator/dependency/ui/SbtPossiblePlacesStep.scala
sbt.place.to.add.dependency=Place to add dependency
sbt.select.a.place.from.the.list.above.to.enable.this.preview=// Select a place from the list above to enable this preview

### org/jetbrains/sbt/annotator/quickfix/SbtRefreshProjectQuickFix.scala
sbt.fix.refreshProject=Refresh project

### org/jetbrains/sbt/annotator/quickfix/SbtUpdateResolverIndexesQuickFix.scala
sbt.fix.updateIndexes=Update project resolvers' indexes

### org/jetbrains/sbt/codeInspection/SbtReplaceProjectWithProjectInInspection.scala
sbt.inspection.projectIn.name=Replace Project() with project.in()

### org/jetbrains/sbt/language/SbtProjectService.scala
sbt.notification.will.be.disabled.for.all.projects=Notification will be disabled for all projects\n\
Settings | Appearance & Behavior | Notifications | {0}\n\
can be used to configure the notification.
sbt.unindexed.maven.repositories.sbt.detection=Unindexed Maven Repositories sbt Detection
sbt.disable.notification=Disable Notification
sbt.unindexed.maven.repositories.for.sbt.detection=Unindexed Maven repositories for sbt detection
sbt.unindexed.maven.repositories.found=<b>{0} Unindexed maven repositories found</b>
sbt.unindexed.maven.repositories.found.message=If you want to use dependency completion, click\
<b><a href="#open">here</a></b>, select required repositories and press "Update" button. <a href="#disable">Disable...</a>

### org/jetbrains/sbt/project/SbtExternalSystemManager.scala
sbt.import.noCustomJvmFound=Cannot determine Java VM executable in selected JDK
sbt.import.noProjectJvmFound=Cannot determine Java VM executable in current project's SDK

### org/jetbrains/sbt/project/SbtNotificationListener.scala
sbt.project.import=sbt project import

### org/jetbrains/sbt/project/SbtProjectListener.scala
sbt.import.sbt.project=Import sbt project
sbt.project.detected=sbt project detected

### org/jetbrains/sbt/project/SbtProjectResolver.scala
sbt.import.to.intellij.project.model=import to IntelliJ project model
sbt.unknown.cause=unknown cause
sbt.import.cancelled=sbt import cancelled: {0}
sbt.launcher.not.found=sbt launcher not found at {0}
sbt.sincesbtversion.required=sbt {0}+ required. Please update project build.properties.

### org/jetbrains/sbt/project/SbtViewContributor.scala
sbt.tasks.defined.in.this.project=sbt tasks defined in this project
sbt.tasks=sbt tasks
sbt.settings.defined.in.this.project=sbt settings defined in this project
sbt.settings=sbt settings
sbt.named.sbt.commands.defined.in.this.project=Named sbt commands defined in this project
sbt.commands=sbt commands

### org/jetbrains/sbt/project/data/service/ModuleExtDataService.scala
sbt.notificationGroupTitle=sbt Import
sbt.notificationGroupName=sbt
sbt.dataService.scalaLibraryIsNotFound=Cannot find project Scala library {0} for module {1}

### org/jetbrains/sbt/project/modifier/BuildFileModifier.scala
sbt.build.file.modification=sbt build file modification

### org/jetbrains/sbt/project/modifier/ui/BuildFileModifiedStatus.java
sbt.build.modified.detected=Detected
sbt.build.modified.automatically=Modified automatically
sbt.build.modified.manually=Modified manually
sbt.build.modified.automatically.and.fixed.manually=Modified automatically and fixed manually
sbt.build.modified.unexpected.file.status=Unexpected build file status: {0}

### org/jetbrains/sbt/project/modifier/ui/ChangesConfirmationDialog.scala
sbt.build.file.changes=sbt build file changes

### org/jetbrains/sbt/project/module/SbtModuleSettingsEditor.scala
sbt.settings.sbtModuleSettings=sbt
sbt.settings.sbtVersionNotDetected=Not detected
sbt.settings.noImplicitImportsFound=No implicit imports found
sbt.settings.resolvers.url=URL
sbt.settings.resolvers.name=Name
sbt.settings.resolvers.updated=Updated
sbt.settings.resolvers.neverUpdated=Never
sbt.settings.resolvers.mavenUnavailable=Maven Plugin Disabled

### org/jetbrains/sbt/project/module/SbtModuleSettingsForm.form
sbt.settings.sbtVersionInModule=sbt version
sbt.settings.implicitImports=Implicit imports
sbt.settings.resolvers=Resolvers
sbt.settings.resolvers.update=Update

### org/jetbrains/sbt/project/settings/SbtProjectSettingsControl.scala
sbt.settings.useShell=Use sbt shell:
sbt.settings.useShellForImport=for imports
sbt.settings.useShellForBuild=for builds
sbt.settings.remoteDebug=Enable debugging for sbt shell
sbt.settings.allowSbtVersionOverride=Allow overriding sbt version
sbt.settings.resolveClassifiers=Library sources
sbt.settings.resolveSbtClassifiers=sbt sources
sbt.settings.download=Download:
sbt.settings.project.jdk="Project JDK:"
sbt.settings.new="New..."

### org/jetbrains/sbt/project/sources/SharedSourcesModuleType.scala
sbt.shared.sources.module=Shared sources module
sbt.shared.source.module.description=During compilation, dependency to a shared sources module mixes in module sources rather than module output

### org/jetbrains/sbt/project/structure/SbtException.scala
sbt.import.error=Error while importing sbt project:<br/><pre>{0}</pre>
sbt.import.unresolvedDependencies=Unresolved dependencies:<ul>{0}</ul>See complete log in <a href="{1}">{1}</a>

### org/jetbrains/sbt/project/structure/SbtStructureDump.scala
sbt.extracting.project.structure.from.sbt.shell=extracting project structure from sbt shell
sbt.project.structure.extracted=project structure extracted
sbt.import.errors.project.reload.aborted=import errors, project reload aborted
sbt.extracting.project.structure.from.sbt=extracting project structure from sbt
sbt.task.failed.see.log.for.details=sbt task failed, see log for details
sbt.events=events

### org/jetbrains/sbt/project/template/SbtModuleBuilder.scala
sbt.settings.sbt=&sbt:
sbt.settings.scala=S&cala:
sbt.settings.sources=Sources
sbt.download.scala.standard.library.sources=Download Scala standard library sources (useful for editing the source code)
sbt.download.sbt.sources=Download sbt sources (useful for editing the project definition)

### org/jetbrains/sbt/project/template/SbtProjectTemplate.scala
sbt.based.scala.project.recommended=sbt-based Scala project (recommended)

### org/jetbrains/sbt/project/template/techhub/TechHubDownloadUtil.scala
sbt.techhub.downloading.location=Downloading {0}
sbt.techhub.no.response.status.from.connection.to.url=No response status from connection to {0}
sbt.techhub.response.to.connection.to.url.was.status=Response to connection to {0} was '{1}'

### org/jetbrains/sbt/project/template/techhub/TechHubProjectTemplate.scala
sbt.techhub.lightbend.project.starter=Lightbend Project Starter
sbt.techhub.sbt.based.project.from.a.lightbend.tech.hub.template=sbt-based project from a Lightbend Tech Hub template

### org/jetbrains/sbt/resolvers/SbtIndexesManager.scala
sbt.resolverIndexer.indexDirIsCorruptedCantBeRemoved=sbt repository index at {0} is corrupted, but could not be removed.\nPlease remove it manually and re-index sbt repositories

### org/jetbrains/sbt/resolvers/SbtResolver.scala
sbt.local.cache=Local cache

### org/jetbrains/sbt/resolvers/exceptions.scala
sbt.resolverIndexer.cantCreateIndexDir=Index dir can not be created: {0}
sbt.resolverIndexer.indexVersionMismatch=Index version differs from the latest one: {0}
sbt.resolverIndexer.invalidRepository=Repository is absent or invalid: {0}
sbt.resolverIndexer.remoteRepositoryHasNotBeenIndexed=Remote repository has not been indexed: {0}\n{1}
sbt.resolverIndexer.indexFileIsCorrupted=sbt repository index at {0} is corrupted.\nPlease remove the file and re-index sbt repositories

### org/jetbrains/sbt/resolvers/indexes/IvyIndex.scala
sbt.resolverIndexer.progress.saving=Saving

### org/jetbrains/sbt/runner/SbtConfigurationType.scala
sbt.runner.displayName=sbt Task
sbt.runner.description=Run sbt task

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.form
sbt.runner.form.tasks=Tasks:
sbt.runner.form.vmParameters=VM parameters:
sbt.runner.form.environmentVariables=Environment variables:
sbt.runner.form.tasksEditorTitle=Tasks
sbt.runner.form.vmParametersEditorTitle=VM parameters

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.java
sbt.runner.choose.working.directory=Choose Working Directory

### org/jetbrains/sbt/settings/SbtSettingsPane.form
sbt.settings.jvm=JVM
sbt.settings.custom.launcher=C&ustom
sbt.settings.maxHeapSize=Maximum heap size, MB
sbt.settings.vmParams=VM parameters
sbt.settings.sbtLauncher=Launcher (sbt-launch.jar)
sbt.settings.bundled=&Bundled

### org/jetbrains/sbt/settings/SbtSettingsPane.java
sbt.settings.choose.custom.launcher=Choose a Custom Launcher
sbt.settings.choose.sbt.launch.jar=Choose sbt-launch.jar

### org/jetbrains/sbt/shell/SbtProcessManager.scala
sbt.shell.disable.version.override=Disable version override
sbt.shell.update.sbt.version=Update sbt version
sbt.shell.configure.sbt.jvm=&Configure sbt JVM
sbt.shell.configure.project.jdk=&Configure project JDK
sbt.shell.started.sbt.shell.with.sbt.version=Started sbt shell with sbt version {0} instead of {1} configured by project.
sbt.shell.no.jre.found.at.path=No JRE found at path {0}. Using project JDK instead.
sbt.shell.no.project.jdk.configured=No project JDK configured, but it is required to run sbt shell.
sbt.shell.inject.settings.comment=// Generated by IntelliJ-IDEA Scala plugin.\n\
        |// Adds settings when starting sbt from IDEA.\n\
        |// Manual changes to this file will be lost.

### org/jetbrains/sbt/shell/SbtProjectTaskRunner.scala
sbt.shell.refresh.sbt.project=Refresh sbt project
sbt.shell.sbt.build.failed=sbt build failed
sbt.shell.unable.to.build.sbt.project=Unable to build sbt project corresponding to IDEA module {0}.
sbt.shell.sbt.build=sbt build
sbt.shell.build.interrupted=build interrupted
sbt.shell.error.build.interrupted=ERROR: build interrupted
sbt.shell.errors.in.build=errors in build
sbt.shell.warnings.in.build=warnings in build
sbt.shell.synchronizing.output.directories=Synchronizing output directories...

### org/jetbrains/sbt/shell/action/projectWindowActions.scala
sbt.shell.action.run.task=Run
sbt.shell.action.run.task.description=Run task in sbt shell
sbt.shell.action.show.task=Show Result
sbt.shell.action.show.task.description=Show task result in sbt shell
sbt.shell.action.inspect.task=Inspect
sbt.shell.action.inspect.task.description=Inspect task in sbt shell
sbt.shell.action.show.setting=Show Value
sbt.shell.action.show.setting.description=Show setting in sbt shell
sbt.shell.action.inspect.setting=Inspect
sbt.shell.action.inspect.setting.description=Inspect setting in sbt shell
sbt.shell.action.run.command=Run
sbt.shell.action.run.command.description=Run command in sbt shell
sbt.shell.action.help=Help
sbt.shell.action.help.description=Get help in sbt shell

### org/jetbrains/sbt/shell/action/shellWindowActions.scala
sbt.shell.start=Start sbt shell
sbt.shell.restart=Restart sbt shell
sbt.shell.stop=Stop sbt shell
sbt.shell.execute.task=Execute {0}
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.attach.debugger=Attach debugger to sbt shell
sbt.shell.enable.debugging.in.sbt.settings=Enable sbt shell debugging in sbt settings and restart shell to attach debugging
sbt.shell.debug=Debug sbt shell
